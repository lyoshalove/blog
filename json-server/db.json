{
  "users": [
    {
      "id": "1",
      "username": "Alex",
      "password": "snussnus",
      "role": "USER",
      "avatar": "https://avatars.dzeninfra.ru/get-zen_doc/168279/pub_63a58cd79dfd0d313ed59008_63a58f2bc8037c4b0e5c3312/scale_1200"
    },
    {
      "id": "2",
      "username": "admin",
      "password": "123",
      "role": "ADMIN",
      "avatar": "https://avatars.dzeninfra.ru/get-zen_doc/168279/pub_63a58cd79dfd0d313ed59008_63a58f2bc8037c4b0e5c3312/scale_1200"
    }
  ],
  "profile": {
    "firstname": "Alex",
    "lastname": "Snus",
    "age": 22,
    "currency": "RUB",
    "country": "Russia",
    "city": "Moscow",
    "username": "admin",
    "avatar": "https://avatars.dzeninfra.ru/get-zen_doc/168279/pub_63a58cd79dfd0d313ed59008_63a58f2bc8037c4b0e5c3312/scale_1200"
  },
  "articles": [
    {
      "id": "0",
      "title": "JavaScript article",
      "subtitle": "Че нового в джсе в 2023 году?",
      "img": "https://avatars.dzeninfra.ru/get-zen_doc/168279/pub_63a58cd79dfd0d313ed59008_63a58f2bc8037c4b0e5c3312/scale_1200",
      "views": 666,
      "createdAt": "21.04.2021",
      "type": ["IT"],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок блока",
          "paragraphs": [
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Инструменты разработчика, и, в том числе, консоль, имеются и в других браузерах. Консоль хороша тем, что она, когда вы пользуетесь браузером, всегда под рукой."
          ]
        },
        {
          "id": "2",
          "type": "CODE",
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n   </script>\n </body>\n</html>"
        },
        {
          "id": "3",
          "type": "CODE",
          "code": "console.log('Hello, World!');"
        },
        {
          "id": "4",
          "type": "IMAGE",
          "src": "https://i.ytimg.com/vi/8By5xEXkZQk/maxresdefault.jpg?sqp=-oaymwEmCIAKENAF8quKqQMa8AEB-AHUBoAC4AOKAgwIABABGGUgTyhHMA8=&amp;rs=AOn4CLACJlKGja8-IWEpZpNzpdIXXcx7Tg",
          "title": "Рисунок 1 - счастливый человек, который пишет на JS"
        },
        {
          "id": "5",
          "type": "TEXT",
          "title": "Что придумали: систему, которая динамически строит и корректирует маршрут каждого пациента",
          "paragraphs": [
            "Раньше человек приходил в регистратуру, получал обходной лист со списком кабинетов, которые нужно посетить. Такой же перечень получали его коллеги. Они все ходили по этому маршруту, ожидали приема врачей и спрашивали: «Кто последний?». Иногда возникали конфликты, когда кто-то хотел попасть в кабинет вне очереди.",
            "Обычно медцентры ставят на стойку регистратуры электронную очередь, которая показывает номера талонов и к какому окну необходимо подойти. Мы разработали систему, которая строит индивидуальный маршрут для каждого посетителя по кабинетам. Причем это происходит динамически и на протяжении всего времени, пока пациент находится в учреждении. Перед тем как указать следующий кабинет обходного листа, алгоритмы анализируют множество факторов:",
            "1. Среднюю продолжительность приема в каждом кабинете, чтобы избежать очередей.",
            "2. Сколько человек ждет приема в те кабинеты, куда нужно попасть конкретному посетителю.",
            "3. Кабинеты, в которых пациент уже побывал, чтобы система не отправила его дважды к одному и тому же доктору.",
            "4. Перерывы в работе кабинетов — от отдыха врачей до кварцевания и уборки.",
            "5. Последовательность, в которой нужно пройти обследования и осмотры — например, к терапевту нужно идти уже с готовой кардиограммой. Значит, его кабинет должен идти после кабинета, где делают ЭКГ. Или пациенту нужно пройти вакцинацию, поэтому сначала он должен попасть к терапевту, и только потом в процедурный кабинет.",
            "На основе этих данных система определяет, куда нужно направить пациента, чтобы он потратил как можно меньше времени в медцентре. При этом посетителю не надо запоминать, за кем он занимал очередь, и считать, сколько перед ним человек. Все это уже сделал и учел алгоритм, достаточно просто ждать вызова в нужный кабинет."
          ]
        }
      ]
    }
  ],
  "comments": [
    {
      "id": "1",
      "text": "круто!!!",
      "articleId": "0",
      "userId": "1"
    },
    {
      "id": "2",
      "text": "классно!!!",
      "articleId": "0",
      "userId": "1"
    },
    {
      "id": "3",
      "text": "какашка!!!",
      "articleId": "0",
      "userId": "1"
    }
  ]
}